/*	StandardSystemTest Autoprogram*//* $NOFILE$*/:FLOAT  	co2_low 400 	co2_hi 800	:FLOAT ambientT 25		targetT 25		:INT thisLogList[] { -21 -1 -2 -4 -5 -7 -8 -9 -10 -11 -12 -24 -37 -38 -39 -40 -41 -42 -43 -44 -45 -46 -57 -58 -23 }:INT logInt 0	logEvery 10	equilTimeLimit 300	logPeriod 60	statsPeriod 20	:CHAR destFile[] "/User/StdTest_":PTR dest 0:STTR stats:FCT main{	CLEAR	10 1 POSXY "Standard System Test" PRINT 	1 3 POSXY "This test requires that the chamber be\n" PRINT	"closed. The CO2 mixer should have a\n" PRINT	"cartidge installed. It takes about 15\n" PRINT	"minutes to complete.\n" PRINT	1 8 POSXY "Press enter to start, or esc to quit" PRINT		GETKEY 0x1b == IF RETURN THEN		GETTDS DATE "%d-%02d-%02d_" destFile SPRINT	GETTDS TIME "%02d_%02d_%02d" destFile SPRINT	  	"w" destFile OPEN_FILE IF RETURN THEN 	&dest = 	 	destFile "\fResults of this test will be in file\n\n\"%s\"\n\n" PRINT	"Press any key to continue" PRINT GETKEY DROP		"StandardSystemTest\n" dest PRINT			dest GETTDS CTIME	"\n" dest PRINT		thisUnit "Unit=\t%s\n" dest PRINT	ledSource "ledSource=\t%d\n" dest PRINT	ledSource ABS 2 == IF		FlrSN "LCF=%s\n" dest PRINT		FlrCalib "LCFCals=\t%(*\t)6.2f\n" dest PRINT	ELSE		ledSource IF			lightSource "LightSource=%s\n" dest PRINT		THEN	THEN	logPeriod "StatsPeriod=\t%d\n" PRINT 	WriteThisHeader 		statsPeriod &co2_1_um stats STADD DROP	statsPeriod &co2_2_um stats STADD DROP	statsPeriod &h2o_1_mm stats STADD DROP	statsPeriod &h2o_2_mm stats STADD DROP	LPPrep		&MyNewReadingsHook &HookNewReadings =	1 NLOOP		/* 1. fan hi, flow 500, co2 400, coolers off, lamp off		*/		5 LPSetFanSpeedVal		500 2 FlowSetNewTarget		co2_low 2 MixerSetNewTarget		0 1 CoolSetNewTarget		0 1 LampSetNewTarget				"Step 1: Fan HI, Flow->500, CO2R->400, Lamp->off. Waiting To Stabilize..." SpecialLogRem		"1/7" &lpProgress =		WaitToStabilize lpAbort BREAKIF				/* 2. lock CO2 controller		*/		"Step 2: Lock Mixer controller to prevent adjustments, and monitor" SpecialLogRem		"2/7" &lpProgress =		GetCo2MixerMv 4 MixerSetNewTarget		logPeriod WaitAndLog lpAbort BREAKIF				/* 3. fan off		*/		"Step 3: Turn off chamber fan (reduced noise?)" SpecialLogRem		"3/7" &lpProgress =		0 LPSetFanSpeedVal		logPeriod WaitAndLog lpAbort BREAKIF		/* 4. fan on, lamp on		*/		"Step 4: Chamber fan back on, lamp on->1000" SpecialLogRem		"4/7" &lpProgress =		5 LPSetFanSpeedVal		ledSource IF 1000 2 LampSetNewTarget THEN		logPeriod WaitAndLog lpAbort BREAKIF				/* 5. add TECs		*/		"Step 5: Add Coolers->ambient" SpecialLogRem		"5/7" &lpProgress =		Tblk_c &ambientT =		ambientT 2 CoolSetNewTarget		logPeriod WaitAndLog lpAbort BREAKIF				/* 6. Drop temp, raise CO2, lamp off		*/		"Step 6: CO2R->800, Tblk->(ambient-3) C, lamp off. Waiting To Stabilize..." SpecialLogRem		"6/7" &lpProgress =		co2_hi 2 MixerSetNewTarget		0 1 LampSetNewTarget		ambientT 3 - 2 CoolSetNewTarget		WaitToStabilize lpAbort BREAKIF		logPeriod WaitAndLog lpAbort BREAKIF				/* 7. Raise temp, Drop CO2		*/		"Step 7: CO2R->400, Tblk->(abivent+3) C, lamp off. Waiting To Stabilize..." SpecialLogRem		"7/7" &lpProgress =		co2_low 2 MixerSetNewTarget		0 1 LampSetNewTarget		ambientT 3 + 2 CoolSetNewTarget		WaitToStabilize lpAbort BREAKIF		logPeriod 5 * WaitAndLog lpAbort BREAKIF	ENDLOOP	/* Done	*/	0 0 CoolSetNewTarget	0 1 LampSetNewTarget	&Noop &HookNewReadings =		dest CLOSE	LPCleanup		2000 BEEP}WaitToStabilize{	0 &logInt =	10 &logEvery = 	&StabilityCheckTic LPTicFct 	 	equilTimeLimit LPMeasure  	IsMixerStable IsCoolerStable AND IF 		"Stability Achieved" SpecialLogRem 	ELSE 		"Timed Out - Stability Not Achieved" SpecialLogRem 	THEN}WaitAndLog{	:INT secs		0 &logInt =	10 &logEvery = 	&LogCheckTic LPTicFct	secs LPMeasure }StabilityCheckTic{	LogCheckTic	IsMixerStable IsCoolerStable AND IF HALT THEN}LogCheckTic{	&logInt 1 + VAL logEvery > IF		SpecialLog		0 &logInt =	THEN	LogProgEverySec}WriteThisHeader{	1 :INT i	thisLogList READY NLOOP		thisLogList i PICK VAL :INT id		id FMtGetLogLab "%s\t" dest PRINT		&i 1 + DROP	ENDLOOP	"SD(CO2R)\tSD(CO2S)\tSD(H2OR)\tSD(H2OS)\n" dest PRINT}SpecialLog{	1 :INT i	thisLogList READY NLOOP		thisLogList i PICK VAL :INT id    	id FmtGetVarAddr PVAL    	id FmtGetLogFmt dest PRINT  		"\t" dest PRINT		&i 1 + DROP	ENDLOOP	0x13 3 stats STGET	0x13 2 stats STGET 	0x13 1 stats STGET	0x13 0 stats STGET 	"%1.2f\t%1.2f\t%1.3f\t%1.3f\n" dest PRINT}SpecialLogRem{	/* remark */		GETTDS TIME "%02d:%02d:%02d\t\"%s\"\n" dest PRINT}MyNewReadingsHook{	a2dTime 60.0 / stats STUPDATE}